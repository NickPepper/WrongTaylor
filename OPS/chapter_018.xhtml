<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
	<title>ПРОГРАММИРОВАНИЕ - ВВЕДЕНИЕ В ПРОФЕССИЮ I: АЗЫ ПРОГРАММИРОВАНИЯ</title>
	<meta charset="utf-8" />
	<link rel="stylesheet" href="css/stylesheet.css" type="text/css" />
</head>
<body>
<section class="body-rw Chapter-rw" epub:type="bodymatter chapter">
<header>
	<h4>1.4.11. Права доступа к файлам</h4>
</header>

<p>С каждым файлом в ОС Unix связано 12-битное слово, называемое &#171;правами доступа&#187; к файлу <a epub:type="noteref" href="#n1_1_28">28</a>. Младшие 9 бит этого слова объединены в три группы по три бита; каждая группа задаёт права доступа для владельца файла, для его группы и для всех остальных пользователей. Три бита в каждой группе отвечают за право чтения файла, право записи в файл и право исполнения файла. Чтобы узнать права доступа к тому или иному файлу, можно воспользоваться командой ls -l, например:</p>

<br/>
<p class="codecite">
&#160;&#160;&#160;&#160;&#36; ls -l /bin/cat<br/>
&#160;&#160;&#160;&#160;-rwxr-xr-x&#160;&#160;&#160;1&#160;&#160;root&#160;&#160;&#160;root&#160;&#160;&#160;&#160;14232&#160;&#160;&#160;Feb 4 2013 /bin/cat<br/>
</p>
<br/>

<p>Расположенная в начале строки группа символов -rwxr-xr-x показывает тип файла (минус в самом начале означает, что мы имеем дело с обыкновенным файлом, буква d означала бы каталог и т. п.) и права доступа, соответственно, для владельца (в данном случае rwx, т. е. чтение, запись и исполнение), группы и всех остальных (в данном случае r-x, т. е. права на запись отсутствуют). Как мы видим, файл /bin/cat доступен любому пользователю на чтение и исполнение, но модифицировать его может только пользователь root (администратор системы).</p>

<p>Поскольку группа из трёх бит соответствует ровно одной цифре восьмеричной системы счисления <a epub:type="noteref" href="#n1_1_29">29</a>, общепринятой является практика записи слова прав доступа к файлу в виде восьмеричного числа, обычно трёхзначного. При этом младший разряд (последняя цифра) соответствует правам для всех пользователей, средняя&#160;&#8212; правам для группы и старшая (обычно она идёт самой первой) цифра обозначает права для владельца. Права на чтение соответствуют 1, права на запись&#160;&#8212; 2, права на чтение&#160;&#8212; 4; соответствующие значения суммируются, т.е., например, права на чтение и запись обозначаются цифрой 6 (4 + 2), а права на чтение и исполнение&#160;&#8212; цифрой 5 (4 + 1). Права доступа к файлу /bin/cat из нашего примера можно закодировать восьмеричным числом 0755 <a epub:type="noteref" href="#n1_1_30">30</a>.</p>

<p>Для каталогов интерпретация битов прав доступа несколько отличается. Права на чтение каталога дают возможность просмотреть его содержимое. Права на запись позволяют модифицировать каталог, т. е. создавать и уничтожать в нём файлы (причём удалить можно и чужой файл, а также такой, на который прав доступа нет, т.к. достаточно иметь права доступа на запись в сам каталог). Что касается бита прав &#171;на исполнение&#187;, для каталога этот бит означает возможность каким-либо образом использовать содержимое каталога, в том числе, например, открывать файлы, находящиеся в каталоге. Таким образом, если на каталог установлены права чтения, но нет прав исполнения, мы можем его просмотреть, но воспользоваться увиденным нам не удастся. Напротив, если есть права исполнения, но нет прав чтения, мы можем открыть файл из этого каталога только в том случае, если точно знаем имя файла. Узнать имя мы никак не можем, т. к. возможности просмотреть каталог у нас нет.</p>

<br/>
<small>
	<p>Оставшиеся три (старших) разряда слова прав доступа называются SetUid Bit (04000), SetGid Bit (02000) и Sticky Bit (01000). Если для исполняемого файла установить SetUid Bit, этот файл будет при исполнении иметь права своего владельца (чаще всего&#160;&#8212; пользователя root) вне зависимости от того, кто из пользователей соответствующий файл запустил. SetGid Bit работает похожим образом, устанавливая исполнение от имени группы владельца файла вместо группы запустившего программу пользователя. Примером suid-программы является passwd. Sticky Bit, установленный на исполняемом файле, в старых версиях ОС Unix означал, что сегмент кода программы следует оставить в памяти даже после того, как программа будет завершена; это позволяло экономить время на загрузке в память программ, исполняемых чаще других. Современные системы сами решают, какие файлы следует оставить в памяти, и делают это в среднем эффективнее, чем мог бы сделать администратор; sticky bit на исполняемых файлах современными системами игнорируется.</p>

	<p>Для каталогов SetUid Bit и SetGid Bit означают, что какой бы пользователь ни создал в этом каталоге файл, в качестве, соответственно, &#171;владельца&#187; и &#171;группы владельца&#187; для этого файла будут установлены те же владелец и группа, что и у самого каталога. Sticky Bit означает, что даже если пользователь имеет право на запись в данный каталог, удалить он сможет только свои (принадлежащие ему) файлы.</p>
</small>
<br/>

<p>Для изменения прав доступа к файлам используется команда chmod  <a epub:type="noteref" href="#n1_1_31">31</a>. Эта команда позволяет задать новые права доступа в виде восьмеричного числа, например</p>

<br/>
<p class="codecite">
&#160;&#160;&#160;&#160;chmod 644 myfile.c<br/>
</p>
<br/>

<p>устанавливает для файла myfile.c права записи только для владельца, а права чтения&#160;&#8212; для всех.</p>

<p>Права доступа также можно задать в виде мнемонической строки вида [ugoa][+-=][rwxsXtugo] Буквы u, g, o и a в начале означают, соответственно, владельца (user), группу (group), всех остальных (others) и всех сразу (all). &#171;+&#187; означает добавление новых прав, &#171;-&#187;&#160;&#8212; снятие старых прав, &#171;=&#187;&#160;&#8212; установку указанных прав и снятие всех остальных. После знака буквы r, w, x означают, как можно догадаться, права на чтение, запись и исполнение, буква s&#160;&#8212; установку/снятие Set-битов (имеет смысл для владельца и группы), t обозначает Sticky Bit. Буква X (заглавная) означает установку/снятие бита исполнения только для каталогов, а также для тех файлов, на которые хотя бы у кого-нибудь есть права исполнения. Если команду chmod использовать с флажком -R, она проведёт смену прав доступа ко всем файлам во всех поддиректориях заданной директории. Например, команда chmod a+x myscript сделает файл myscript исполняемым; команда chmod go-rwx * снимет со всех файлов в текущем каталоге все права, кроме прав владельца. Очень полезной может оказаться команда</p>

<br/>
<p class="codecite">
&#160;&#160;&#160;&#160;chmod -R u+rwX,go=rX ~<br/>
</p>
<br/>

<p>на случай, если вы случайно испортите права доступа в своей домашней директории; эта команда, скорее всего, приведёт всё в удовлетворительное состояние. Поясним, что эта команда устанавливает в вашей домашней директории и всех её поддиректориях для всех файлов права для владельца на чтение и запись; для директорий, а также файлов, для которых исполнение разрешено хоть кому-то, владельцу назначаются также права на исполнение. Для группы и остальных пользователей устанавливаются права на чтение, для исполняемых файлов и директорий&#160;&#8212; также права на исполнение, а все остальные права убираются.</p>

<aside epub:type="footnote" id="n1_1_28">
	<p>В английском оригинале&#160;&#8212; permissions.</p>
</aside>
<aside epub:type="footnote" id="n1_1_29">
	<p>Подробно о системах счисления будет рассказано в §1.5.2; в принципе, для работы с правами доступа к файлам не обязательно понимать, как в действительности устроена восьмеричная система счисления, достаточно просто помнить, какой вид прав соответствует какой цифре (4, 2, 1) и что итоговое обозначение режима доступа составляет их сумму, которая, естественно, оказывается цифрой от 0 до 7.</p>
</aside>
<aside epub:type="footnote" id="n1_1_30">
	<p>Обратите внимание, что число записано с нулём впереди; согласно правилам языка Си это означает, что число записано в восьмеричной системе, а поскольку профессиональные пользователи Unix очень любят этот язык, они обычно записывают восьмеричные и шестнадцатеричные числа, следуя соглашениям Си и никак это не оговаривая, то есть предполагая, что их и так поймут.</p>
</aside>
<aside epub:type="footnote" id="n1_1_31">
	<p>Сокращение английских слов <i>change mode</i>, то есть &#171;изменить режим&#187;.</p>
</aside>

</section>
</body>
</html>