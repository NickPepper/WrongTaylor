<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>ПРОГРАММИРОВАНИЕ - ВВЕДЕНИЕ В ПРОФЕССИЮ I: АЗЫ ПРОГРАММИРОВАНИЯ</title>
	<link rel="stylesheet" href="css/stylesheet.css" type="text/css" />
	<meta charset="utf-8" />
</head>

<body>
<section class="frontmatter-rw Preface-rw" epub:type="frontmatter colophon">

<header>
	<h1>Предисловие третье, напутственное</h1>
</header>

<p>Это предисловие, последнее из трёх, адресовано тем, кто решил воспользоваться моей книгой, чтобы изучать программирование&#160;&#8212; один из самых увлекательных видов человеческой деятельности для тех, кто не обделён интеллектом.</p>

<p>Издавна самым умным и умелым людям хотелось создавать что-то такое, что <i>действует само по себе</i>; до появления электричества такое было доступно только механикам-часовщикам. В XVIII веке Пьер Жаке-Дро <a epub:type="noteref" href="#n3">3</a> создал несколько уникальных механических кукол, которые назвал &#171;автоматонами&#187;: одна из этих кукол играет на органе пять разных мелодий, при этом нажимает пальцами нужные клавиши органа, пусть и сделанного специально для неё, но при этом реально управляющегося клавишами; другая рисует на бумаге довольно сложные картинки&#160;&#8212; любую из заданных трёх. Наконец, последняя, самая сложная кукла, &#171;Пишущий мальчик&#187; или &#171;Каллиграф&#187;, пишет на бумаге фразу, обмакивая гусиное перо в чернильницу; фраза состоит из сорока букв и &#171;программируется&#187; поворотами специального колеса. Этот механизм, завершённый в 1772 году, состоит из более чем шести тысяч деталей.</p>

<p>Конечно, самое сложное при создании такого автомата&#160;&#8212; это <i>придумать</i> всю его механику, найти такое сочетание деталей, которое заставит механические руки совершать столь сложные и точные движения; несомненно, создатель &#171;Пишущего мальчика&#187; был уникальным гением в области механики. Но коль скоро вы имеете дело с механикой, одной гениальности вам не хватит. Пьеру Жаке-Дро пришлось изготовить каждую из шести тысяч деталей, выточить их из металла с фантастической точностью; конечно, часть работы он поручил наёмным работникам принадлежащей ему мастерской, но факт остаётся фактом: кроме гениальности конструктора таких механических изделий, для их появления необходимо ещё огромное количество человеческого труда, притом такого, который невозможно назвать творческим.</p>

<p>Автоматоны Жаке-Дро представляют собой своего рода экстремальную иллюстрацию возможностей творящего человеческого разума в сочетании с вложением большого количества рутинного труда по изготовлению материальных деталей; но тот же принцип мы можем наблюдать едва ли не в любом виде конструкторской деятельности. Гениальный архитектор может нарисовать эскиз прекрасного дворца и создать его подробный проект, но дворец никогда не появится, если не найдётся желающих оплатить труд тысяч людей, задействованных во всей цепочке производства строительных материалов, а затем и в самом строительстве. Гениальный конструктор может придумать новый автомобиль или самолёт, которые так и останутся задумкой, пока тысячи других людей не согласятся (скорее всего, за деньги, которые тоже должны откуда-то взяться) изготовить все нужные детали и агрегаты, а потом, соединив их все вместе, провести цикл испытаний и доработок. Повсюду творческий технический гений натыкается на материальную прозу жизни; мы воочию видим результаты работы гениальных конструкторов, если сопротивление материальной среды удаётся преодолеть, но мы можем лишь догадываться о том, сколько столь же гениальных идей бездарно пропало, так и не найдя возможности воплотиться в металле.</p>

<p>С появлением программируемых компьютеров стало возможно создать нечто, действующее само по себе, избежав при этом сложностей, связанных с материальным воплощением. Проект дома, самолёта или автомобиля&#160;&#8212; это лишь <i>формальное описание</i>, по которому затем необходимо создать сам автомобиль или дом, иначе от такого проекта не будет никакого толку. Компьютерная программа&#160;&#8212; это тоже формальное описание того, что должно произойти, но, в отличие от технических проектов, <strong>программа сама по себе есть готовое изделие</strong>. Если бы Пьер Жаке-Дро мог материализовывать свои задумки, просто выполнив чертежи, он бы наверняка удивил публику чем-нибудь гораздо более сложным, нежели &#171;Пишущий мальчик&#187;; можно сказать, что у программистов такая возможность есть. Пожалуй, не будет преувеличением заявить, что программирование&#160;&#8212; самая творческая из всех инженерно-технических профессий, и этим программирование привлекает не только профессионалов, но и огромное число любителей; вечный вопрос о том, чего в программировании больше&#160;&#8212; техники или искусства&#160;&#8212; не решён ни в чью пользу и вряд ли когда-нибудь будет решён.</p>

<p>Полёт инженерной мысли, не связанный производственной рутиной, неизбежно приводит к наращиванию сложности программирования как дисциплины, и этим обусловлены некоторые особенности этой уникальной профессии. Известно, что программиста нельзя выучить, человек может стать программистом только сам&#160;&#8212; или не стать им вовсе. Высшее образование при этом желательно, поскольку хорошее знание математики, физики и других наук приводит мозги в порядок и резко повышает потенциал саморазвития. &#171;Программистские&#187; предметы, изучаемые в ВУЗе, тоже могут быть полезны, давая информацию и навыки, которые в противном случае пришлось бы выискивать самостоятельно; но, наблюдая за развитием будущих программистов, можно вполне определённо сказать, что роль &#171;программистских&#187; предметов в этом развитии гораздо скромнее, чем принято считать: не будь преподавателя, будущий программист нашёл бы всё нужное сам; да он так и поступает, поскольку усилия преподавателей обеспечивают его потребности в специальных знаниях хорошо если на четверть. Сам будучи университетским преподавателем, я, тем не менее, должен признать, что знаком со многими прекрасными программистами, имеющими непрофильное высшее образование (химическое, медицинское, филологическое) или даже не имеющими вообще никакого диплома; с другой стороны, будучи профессиональным программистом, пусть теперь уже, возможно, и бывшим, я могу совершенно определённо сказать, что профильное университетское образование, конечно, помогло мне в плане профессионального роста, но в целом программистом я сделал себя сам, иной вариант попросту невозможен. Получается так, что высшее образование для программиста желательно, но не обязательно, а вот самообучение, напротив, категорически необходимо: если потенциальный программист не сделает себя сам, другие из него программиста не сделают и подавно.</p>

<p>Книга, которую вы сейчас читаете, получилась в результате попытки собрать воедино основные сведения, которые нужны при самостоятельном изучении программирования, чтобы их не приходилось выискивать в разных местах и источниках сомнительного качества. Конечно, стать программистом можно и без этой книги; существует множество различных путей, которыми можно пройти, чтобы в конце прийти к пониманию программирования; эта книга покажет вам определённые путевые точки, но даже с учётом этого ваш путь к цели останется только вашим, уникальным и не таким, как у других.</p>

<p>Скажу вам сразу, что одной этой книги, чтобы стать программистом, не хватит; всё, что вы можете из неё извлечь&#160;&#8212; это общее понимание того, что же такое программирование как вид человеческой деятельности и как приблизительно это следует делать. Кроме того, эта книга останется для вас абсолютно бесполезным ворохом бумаги, если вы решите просто читать её, не пытаясь при этом писать программы на компьютере. И ещё одно: <strong>эта книга ничему вас не научит, если командная строка ОС Unix не станет вашим основным средством повседневной работы с машиной</strong>.</p>

<p>Объяснение этому очень простое. Чтобы стать программистом, вам для начала придётся начать писать программы так, чтобы они работали; затем в какой-то момент нужно перейти от этюдов к попыткам извлечь из собственных программ какую-то пользу; и, наконец, необходимо сделать последний важнейший шаг&#160;&#8212; довести полезность своих программ до такого уровня, чтобы ими начал пользоваться кто-то кроме вас. Написать сколько-нибудь полезную программу, имеющую графический интерфейс, довольно сложно&#160;&#8212; чтобы это сделать, нужно уже быть программистом, но чтобы им стать, вам, как уже было сказано, нужно начать писать полезные программы. Этот заколдованный круг можно разорвать, выбросив из рассмотрения графический интерфейс, но программы, не имеющие такового и при этом полезные, бывают только в ОС Unix, больше нигде.</p>

<p>К сожалению, я вынужден сейчас сказать вам ещё одну не очень приятную вещь. Далеко не каждый человек может стать программистом, и дело здесь не в уровне интеллекта или каких-то там &#171;способностях&#187;, а в том, каковы ваши индивидуальные склонности. Программирование&#160;&#8212; это очень тяжёлая работа, требующая предельного интеллектуального напряжения, и выдержать эту пытку могут лишь те сравнительно редкие извращенцы, которые способны от процесса создания компьютерных программ получать удовольствие. Вполне возможно, что в ходе изучения этой книги вы поймёте, что программирование&#160;&#8212; это &#171;не ваше&#187;; ничего страшного, в мире есть много других хороших профессий. Если моя книга &#171;всего лишь&#187; позволит вам вовремя понять, что это не ваш путь, и не тратить лучшие годы жизни на бесплодные попытки учиться в ВУЗе по какой-нибудь программистской специальности&#160;&#8212; что же, это само по себе немало: лучшие годы, потраченные впустую, вам потом никто не вернёт, и чем раньше вы поймёте, что вам нужно (точнее, не нужно), тем лучше.</p>

<p>Впрочем, хватит о грустном. В первой, вводной части этой книги собраны сведения, которые вам потом понадобятся в программировании, но которые сами по себе программистских упражнений не требуют. На изучение вводной части у вас может уйти от одного дня до нескольких недель; за это время постарайтесь поставить себе на компьютер какой-нибудь Linux или FreeBSD и начать именно эту систему использовать в повседневной работе. Для этого вам подойдёт практически любой сколь угодно старый компьютер, который ещё не рассыпался на кусочки; вы вряд ли найдёте сейчас &#171;живой&#187; Pentium-1, а машины класса Pentium-II для работы многих дистрибутивов Linux вполне достаточно. Кстати, можете использовать появление в вашем хозяйстве нужной операционной системы в качестве проверки собственной готовности к дальнейшему: если прошло три-четыре недели, а ничего юниксоподобного на ваших компьютерах всё ещё нет, можете не обманывать себя: дальнейшие попытки &#171;научиться программировать&#187; вам просто не нужны.</p>

<p>Получив в своё распоряжение Unix, для начала постарайтесь как можно больше своих обычных &#171;компьютерных дел&#187; делать именно в нём. <strong>Да</strong>, там можно слушать музыку, смотреть фотографии и видео, там можно выходить в Интернет, там есть вполне адекватные заменители привычных офисных приложений, <strong>там можно делать всё</strong>. Поначалу, возможно, будет непривычно и из-за этого тяжело; не волнуйтесь, этот период скоро пройдёт. Добравшись до начала второй части нашей книги, берите в руки редактор текстов, компилятор Паскаля и пробуйте. Пробуйте, пробуйте, пробуйте, пробуйте! Знайте, компьютер от ваших программ не взорвётся, пробуйте смелее. Пробуйте и так, и эдак, пробуйте и это, и то. Если какая-то задача кажется вам интересной&#160;&#8212; решайте её, от этого будет заведомо больше пользы, чем от задач из задачника. И помните: всё это должно быть &#171;в кайф&#187;; вымучивать программирование бесполезно.</p>

<p>Всем тем, кто не испугался, я искренне и от всей души желаю успехов. На то, чтобы написать первые два тома этой книги, у меня ушёл целый год; очень хочется надеяться, что он ушёл не зря.</p>


<aside epub:type="footnote" id="n3">
	<p>В ряде источников&#160;&#8212; &#171;Дроз&#187;, но это неправильно; последняя буква во французской фамилии <i>Droz</i> не произносится.</p>
</aside>
</section>
</body>
</html>