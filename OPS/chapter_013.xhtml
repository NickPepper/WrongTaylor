<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
	<title>ПРОГРАММИРОВАНИЕ - ВВЕДЕНИЕ В ПРОФЕССИЮ I: АЗЫ ПРОГРАММИРОВАНИЯ</title>
	<meta charset="utf-8" />
	<link rel="stylesheet" href="css/stylesheet.css" type="text/css" />
</head>
<body>
<section class="body-rw Chapter-rw" epub:type="bodymatter chapter">
<header>
	<h4>1.4.6. История команд и автодописывание имён файлов</h4>
</header>

<p>Начинающие пользователи командной строки часто полагают, что каждую команду нужно написать вручную, буква за буквой; в командных интерпретаторах, использовавшихся лет сорок назад, всё так и было, но те времена давно прошли.</p>

<p>Для начала отметим, что современные командные интерпретаторы умеют <i>дописывать имена файлов</i>; эта возможность задействуется нажатием клавиши Tab. Начав писать имя файла, вы можете нажать Tab, и если на диске есть только один файл, имя которого начинается с букв, уже введённых вами, то его имя интерпретатор допишет за вас. Если же подходящих файлов больше одного, при нажатии на клавишу Tab ничего видимого не произойдёт, но вы можете тут же нажать на неё второй раз, и интерпретатор выдаст вам полный список файлов, подходящих к вашему случаю; бросив взгляд на этот список, вы в большинстве случаев поймёте, сколько букв вам ещё нужно набрать, прежде чем снова нажать Tab. Некоторые интерпретаторы умеют дописывать не только имена файлов, но и другие параметры в зависимости от команды, которую вы собрались дать. В целом эта возможность, называемая <i>автодополнением</i> (англ. <i>autocompletion</i>), способна сэкономить вам больше половины нажатий на клавиши.</p>

<p>Вторая удачная возможность интерпретатора, изрядно облегчающая жизнь пользователю, состоит в том, что интерпретатор <i>помнит историю введённых вами команд</i>, причём при завершении сеанса работы он эту историю сохраняет в специальном файле, так что вы можете воспользоваться своими командами и на следующий день, и через неделю. Если нужная команда была дана недавно, вы можете вернуть её на экран, последовательно нажимая клавишу &#171;стрелка вверх&#187;; случайно проскочив нужную команду при таком &#171;движении вверх&#187;, можно вернуться обратно, нажав, что вполне естественно, &#171;стрелку вниз&#187;. Любую команду из сохранённой истории вы можете отредактировать, используя привычные &#171;стрелки&#187; влево и вправо, клавиши Home, End и Backspace в их обычной роли.</p>

<p>Всю сохранённую историю можно просмотреть, используя команду history, в большинстве случаев её удобнее будет сочетать с пейджером less, то есть дать команду history | less. Здесь вы увидите, что каждая из запомненных интерпретатором команд снабжена номером; вы можете повторить любую из старых команд, зная её номер, используя восклицательный знак; например, !137 выполнит команду, сохранённую в истории под номером 137. Отметим, что &#171;!!&#187; обозначает <i>последнюю введённую команду</i>, а &#171;!:0&#187;, &#171;!:1&#187; и т.д.&#160;&#8212; отдельные слова из неё; &#171;!abc&#187; обозначает последнюю команду, начинавшуюся со строки abc.</p>

<p>Наконец, в истории можно выполнить поиск по подстроке. Для этого нажмите Ctrl-R (от слова <i>reverse</i>) и начинайте вводить вашу подстроку. По мере того как вы будете набирать буквы, интерпретатор будет находить всё более и более старые команды, содержащие набранную подстроку. Если нажать Ctrl-R снова, вы получите <i>следующую</i> (то есть ещё более старую) команду, содержащую <i>ту же самую</i> подстроку.</p>

<p>Если при редактировании команды, поиске в истории и т.п. вы запутались, можно в любой момент сбросить вводимую строку, нажав Ctrl-C; это гораздо быстрее, чем, например, удалять все введённые символы, настойчиво нажимая на Backspace.</p>

<p>Начав активно использовать перечисленные здесь средства, вы вскоре убедитесь, что ваши трудозатраты на набор команд сократились по меньшей мере раз в двадцать. Ни в коем случае не пренебрегайте этими возможностями! На их освоение у вас уйдёт минут пять, а сэкономленное время будет исчисляться сотнями часов.</p>


</section>
</body>
</html>