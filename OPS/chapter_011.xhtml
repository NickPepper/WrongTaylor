<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
	<title>ПРОГРАММИРОВАНИЕ - ВВЕДЕНИЕ В ПРОФЕССИЮ I: АЗЫ ПРОГРАММИРОВАНИЯ</title>
	<meta charset="utf-8" />
	<link rel="stylesheet" href="css/stylesheet.css" type="text/css" />
</head>
<body>
<section class="body-rw Chapter-rw" epub:type="bodymatter chapter">
<header>
	<h4>1.4.4. Дерево каталогов. Работа с файлами</h4>
</header>

<p>Система каталогов в ОС Unix существенно отличается от привычной пользователям MS-DOS и Windows, и наиболее заметные на первый взгляд отличия&#160;&#8212; это отсутствие букв, обозначающих устройства (что-то вроде A:, C: и т. п.), а также то обстоятельство, что имена каталогов разделяются в ОС Unix не обратной, а прямой косой чертой (/).</p>

<p>После входа в систему вы окажетесь в вашем <i>домашнем каталоге</i>. Домашний каталог&#160;&#8212; это место для хранения ваших личных файлов. Чтобы узнать имя (<i>путь</i>) текущего каталога, введите команду pwd <a epub:type="noteref" href="#n1_1_23">23</a>:</p>

<br/>
<p class="codecite">
&#36; pwd<br/>
/home/lizzie<br/>
</p>
<br/>

<p>Узнать, какие файлы находятся в текущем каталоге, можно с помощью команды ls:</p>

<br/>
<p class="codecite">
&#36; ls<br/>
Desktop&#160;&#160;&#160;&#160;tmp<br/>
</p>
<br/>

<p>Имена файлов в ОС Unix могут содержать любое количество точек в любых позициях, т. е., например, a.b..c...d....e является вполне допустимым именем файла. При этом действует соглашение, что имена, начинающиеся с точки, соответствуют &#171;невидимым&#187; файлам. Чтобы увидеть все файлы, включая невидимые, можно воспользоваться командой ls -a:</p>

<br/>
<p class="codecite">
&#36; ls -a<br/>
.&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;.bash_history&#160;&#160;&#160;&#160;Desktop&#160;&#160;&#160;&#160;tmp<br/>
</p>
<br/>

<p>Некоторые из показанных имен могут соответствовать подкаталогам текущего каталога, другие могут иметь специальные значения. Чтобы было проще различать файлы по типам, можно воспользоваться флажком -F:</p>

<br/>
<p class="codecite">
&#36; ls -aF
./&#160;&#160;&#160;&#160;../&#160;&#160;&#160;&#160;.bash_history&#160;&#160;&#160;&#160;Desktop/&#160;&#160;&#160;&#160;tmp/<br/>
</p>
<br/>

<br/>
<p class="tabledescr">
	<small>Таблица 1.1. Команды для работы с файлами</small>
</p>
<table width="100%">
	<tr>
		<td class="colw">cp</td>
		<td>копирование файла</td>
	</tr>
	<tr>
		<td class="colw">mv</td>
		<td>переименование или перемещение файла</td>
	</tr>
	<tr>
		<td class="colw">rm</td>
		<td>удаление файла</td>
	</tr>
	<tr>
		<td class="colw">mkdir</td>
		<td>создание директории</td>
	</tr>
	<tr>
		<td class="colw">rmdir</td>
		<td>удаление директории</td>
	</tr>
	<tr>
		<td class="colw">touch</td>
		<td>создание файла или установка нового времени модификации</td>
	</tr>
	<tr>
		<td class="colw">less</td>
		<td>просмотр содержимого файла с пейджингом</td>
	</tr>
</table>
<br/><br/>

<p>Теперь мы видим, что все имена, кроме .bash_history, соответствуют каталогам. Заметим, что &#171;.&#187;&#160;&#8212; это ссылка на сам текущий каталог, а &#171;..&#187;&#160;&#8212; ссылка на каталог, содержащий текущий каталог (в нашем примере это /home/lizzie).</p>

<p>Перейти в другой каталог можно командой cd:</p>

<br/>
<p class="codecite">
&#36; pwd<br/>
/home/lizzie<br/>
&#36; cd tmp<br/>
&#36; pwd<br/>
/home/lizzie/tmp<br/>
&#36; cd ..<br/>
&#36; pwd<br/>
/home/lizzie<br/>
&#36; cd /usr/include<br/>
&#36; pwd<br/>
/usr/include<br/>
&#36; cd /<br/>
&#36; pwd<br/>
/<br/>
&#36; cd<br/>
&#36; pwd<br/>
/home/lizzie<br/>
</p>
<br/>

<p>Последний пример показывает, что команда cd без указания каталога делает текущим домашний каталог пользователя, как это было сразу после входа в систему.</p>

<p>Основные команды работы с файлами перечислены в табл.1.1. Например, команда cp file1.txt file2.txt создаст копию файла file1.txt под именем file2.txt; команда rm oldfile удалит файл с именем oldfile. Большинство команд принимает дополнительные флажки-опции, начинающиеся со знака ’-’. Так, команда rm -r the_dir позволяет удалить каталог the_dir вместе со всем его содержимым.</p>


<aside epub:type="footnote" id="n1_1_23">
	<p>Здесь и далее в примерах команд, когда необходимо показать и саму команду, и её вывод, мы будем перед командой добавлять символ приглашения командной строки &#171;&#36;&#187;. Настоящее приглашение командной строки обычно длиннее, оно может содержать имя пользователя, название машины, на который вы работаете, и текущий каталог, что очень удобно; в некоторых примерах мы для наглядности будем использовать более сложное приглашение, но пока для краткости ограничимся одним символом.</p>
</aside>
</section>
</body>
</html>